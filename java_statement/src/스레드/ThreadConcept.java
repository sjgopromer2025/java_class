package 스레드;

public class ThreadConcept {
    public static void main(String[] args) {
        System.out.println("멀티 스레드의 개념 파일입니다. 이 파일은 실행되지 않으며, 이론 정리를 위해 작성되었습니다.");
    }
}

/*
 * 이론 설명: 멀티 스레드
 * 1. 프로세스란?
 * - 프로세스는 실행 중인 프로그램을 의미합니다.
 * - 운영체제에서 하나의 독립적인 작업 단위로 관리됩니다.
 * - 프로세스는 실행에 필요한 메모리 공간(코드, 데이터, 스택 등)을 할당받아 실행됩니다.
 * - 각 프로세스는 독립적인 메모리 공간을 가지며, 다른 프로세스와 메모리를 공유하지 않습니다.
 * 
 * 2. 스레드란?
 * - 스레드는 프로세스 내에서 실행되는 독립적인 작업 단위를 의미합니다.
 * - 하나의 프로세스는 여러 개의 스레드를 가질 수 있으며, 각 스레드는 독립적으로 실행됩니다.
 * - 자바에서는 `Thread` 클래스 또는 `Runnable` 인터페이스를 사용하여 스레드를 생성하고 실행할 수 있습니다.
 * 
 * 3. 멀티 스레드란?
 * - 멀티 스레드는 하나의 프로그램에서 여러 작업(스레드)을 동시에 실행하는 것을 의미합니다.
 * - CPU의 멀티코어를 활용하여 병렬 처리를 수행할 수 있습니다.
 * 
 * 4. 주요 특징:
 * - 자바에서 스레드는 `Thread` 클래스 또는 `Runnable` 인터페이스를 통해 생성.
 * - 각 스레드는 독립적으로 실행되며, 서로 다른 작업을 동시에 수행 가능.
 * - 스레드는 공유 메모리를 사용하여 데이터를 교환할 수 있습니다.
 * 
 * 5. 멀티 스레드의 장점:
 * - CPU 자원을 효율적으로 활용.
 * - 사용자 경험 향상(예: UI 응답성 유지).
 * - 대규모 작업을 작은 단위로 나누어 처리.
 * 
 * 6. 멀티 스레드의 단점:
 * - 동기화 문제로 인해 데이터 불일치가 발생할 수 있음.
 * - 디버깅과 테스트가 어려움.
 * - 스레드 관리 비용이 증가.
 * 
 * 7. 스레드의 동작 원리:
 * - 스레드는 운영체제의 스케줄러에 의해 관리됩니다.
 * - 각 스레드는 독립적으로 실행되지만, CPU는 시분할 방식으로 스레드를 번갈아 실행합니다.
 * - 스레드의 상태는 생성(NEW), 실행 가능(RUNNABLE), 실행 중(RUNNING), 대기(WAITING),
 * 종료(TERMINATED)로 나뉩니다.
 * 
 * 8. 사용 사례:
 * - 대규모 데이터 처리.
 * - 네트워크 요청 처리.
 * - 게임 개발에서의 물리 연산 및 렌더링.
 * - 멀티미디어 애플리케이션에서 오디오 및 비디오 처리.
 * 
 * 9. 프로세스와 스레드의 차이점:
 * - **프로세스**는 독립적인 실행 단위로, 각 프로세스는 별도의 메모리 공간을 가집니다.
 * - **스레드**는 프로세스 내에서 실행되는 작업 단위로, 같은 프로세스 내의 다른 스레드와 메모리를 공유합니다.
 * - 프로세스 간 통신은 복잡하지만, 스레드 간 통신은 상대적으로 간단합니다.
 * - 프로세스는 운영체제에서 별도로 관리되며, 스레드는 프로세스 내에서 관리됩니다.
 */